---
version: '3.8'
networks:
    datapipeline:

services: 


  hazelcast:
    image: hazelcast/hazelcast:5.3.1
    container_name: hazelcast
    ports:
      - '5701:5701'
    environment:
      HZ_CLUSTERNAME: logs
    networks:
      - datapipeline

  cassandra:
    image: cassandra:latest 
    container_name: cassandra
    ports:
      - '9042:9042'
    networks:
      - datapipeline

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   container_name: zookeeper
  #   ports:
  #     - '32181:32181'
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 32181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   networks:
  #     - datapipeline

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   container_name: kafka
  #   ports:
  #     - '9092:9092'
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  #     KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #   networks:
  #     - datapipeline

  producer:
    build:
      ./producer
    # depends_on:
    #   - kafka
    networks:
      - datapipeline
    links:
      - database
      - cassandra
    restart: always
  
  database:
    image: postgres:latest
    container_name: database
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=default_database
    ports:
      - '5432:5432'
    networks:
      - datapipeline
    volumes: 
      - ./postgres/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  rest_api:
    build:
      ./REST_API
    depends_on:
      - database
      - cassandra
    ports:
      - '5000:5000'
    networks:
      - datapipeline
    restart: always

  relation_db:
    container_name: relation_db
    build:
      ./relation_db
    depends_on:
      - database
    ports:
      - '8080:8080'
    networks:
      - datapipeline
    restart: always


  no_sql_db:
    container_name: no_sql_db
    build:
      ./cassandra
    depends_on:
      - cassandra
    ports:
      - '8081:8081'
    networks:
      - datapipeline
    restart: always